<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>技术 on 小小盛的博客</title>
    <link>https://sgshy1995.github.io/categories/%E6%8A%80%E6%9C%AF/</link>
    <description>Recent content in 技术 on 小小盛的博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright>
    <lastBuildDate>Thu, 02 Jan 2020 08:22:42 +0800</lastBuildDate>
    
	<atom:link href="https://sgshy1995.github.io/categories/%E6%8A%80%E6%9C%AF/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Vue组件通信的一种实现&#43;坑</title>
      <link>https://sgshy1995.github.io/2020/01/vue-message-one/</link>
      <pubDate>Thu, 02 Jan 2020 08:22:42 +0800</pubDate>
      
      <guid>https://sgshy1995.github.io/2020/01/vue-message-one/</guid>
      <description>组件通信 前端在用 Vue 框架进行开发时，使用核心思想之一的组件式开发。 在源生JS中，我们熟悉数据之间的通信，页面之间的通信；在这里，Vue 通过组件</description>
    </item>
    
    <item>
      <title>Vue 解析：.sync 修饰符</title>
      <link>https://sgshy1995.github.io/2019/12/vue-sync-one/</link>
      <pubDate>Wed, 25 Dec 2019 08:22:42 +0800</pubDate>
      
      <guid>https://sgshy1995.github.io/2019/12/vue-sync-one/</guid>
      <description>用途 特别的需求： 当一个子组件改变了一个外部传入的属性时，这个变化也会同步到父组件中所绑定。 子组件要“通知”父组件，才可以改变。 避免真正的“双</description>
    </item>
    
    <item>
      <title>深度理解 Vue 数据响应式</title>
      <link>https://sgshy1995.github.io/2019/12/vue-data-one/</link>
      <pubDate>Thu, 19 Dec 2019 08:22:42 +0800</pubDate>
      
      <guid>https://sgshy1995.github.io/2019/12/vue-data-one/</guid>
      <description>前言 什么是 响应式？什么是 vue 的 数据响应式？ 我们先来看一下 Vue 到底对 data 做了什么呢？以下代码： 为了方便操作，这里引入完整版 Vue。 index.html 1 2 3 4 &amp;lt;body&amp;gt; &amp;lt;div id=&amp;#34;app&amp;#34;&amp;gt;&amp;lt;/div&amp;gt;</description>
    </item>
    
    <item>
      <title>Vue使用实例：vue/vue.runtime</title>
      <link>https://sgshy1995.github.io/2019/12/vuecli-two/</link>
      <pubDate>Mon, 16 Dec 2019 16:22:42 +0800</pubDate>
      
      <guid>https://sgshy1995.github.io/2019/12/vuecli-two/</guid>
      <description>前言 本文假设： 你已经使用 vue-cli 生成了一个 vue 项目。或参照 小教程。 并且，src 目录中只有 main.js，public 目录中只有 index.html</description>
    </item>
    
    <item>
      <title>Vue：安装 Vue-cli 与创建项目</title>
      <link>https://sgshy1995.github.io/2019/12/vuecli-one/</link>
      <pubDate>Fri, 13 Dec 2019 16:22:42 +0800</pubDate>
      
      <guid>https://sgshy1995.github.io/2019/12/vuecli-one/</guid>
      <description>前言 从 Webpack 到 @Vue/Cli。 Vue-cli 是一个基于 Vue.js 进行快速开发的完整系统，提供了很多功能： CLI CLI (@vue/cli) 是一个全局安装的 npm 包，提供了终端里的 vue 命令。 它可以通</description>
    </item>
    
    <item>
      <title>Webpack/Vue 实用：一键部署</title>
      <link>https://sgshy1995.github.io/2019/12/webpack-three/</link>
      <pubDate>Tue, 10 Dec 2019 16:22:42 +0800</pubDate>
      
      <guid>https://sgshy1995.github.io/2019/12/webpack-three/</guid>
      <description>前言 当你完成一个 Webpack/Vue 项目时，将代码搞到仓库。 你可以全部部署到 github 仓库，使用 Github Pages 域名的 dist 路径来浏览页面。 也可以将 dist 目录与根目录分开在不同的仓库。 当</description>
    </item>
    
    <item>
      <title>Webpack高级：环境配置、引入和懒加载</title>
      <link>https://sgshy1995.github.io/2019/12/webpack-two/</link>
      <pubDate>Thu, 05 Dec 2019 16:22:42 +0800</pubDate>
      
      <guid>https://sgshy1995.github.io/2019/12/webpack-two/</guid>
      <description>文档 这里介绍webpack的一些高级配置，包括根据不同环境（开发和生产）使用不同的配置文件；引入 SCSS， LESS和 Stylus，以及引入图</description>
    </item>
    
    <item>
      <title>Webpack入门：从安装到配置</title>
      <link>https://sgshy1995.github.io/2019/12/webpack-one/</link>
      <pubDate>Sun, 01 Dec 2019 16:22:42 +0800</pubDate>
      
      <guid>https://sgshy1995.github.io/2019/12/webpack-one/</guid>
      <description>文档 webpack 用于编译 JavaScript 模块。 一旦完成安装，你就可以通过 webpack 的 CLI 或 API 与其配合交互。 这里以入门者的角度（中文）介绍 webpack 的常用配置。当 webpack 更新后，以下细节可能</description>
    </item>
    
    <item>
      <title>MVC：面包块而不是面条</title>
      <link>https://sgshy1995.github.io/2019/11/js-mvc-one/</link>
      <pubDate>Wed, 20 Nov 2019 16:22:42 +0800</pubDate>
      
      <guid>https://sgshy1995.github.io/2019/11/js-mvc-one/</guid>
      <description>概述 在软件工程中，设计模式（design pattern）是对软件设计中普遍存在（反复出现）的各种问题，所提出的解决方案。 设计模式并不直接用来</description>
    </item>
    
    <item>
      <title>从不断“进化”的源码来碰面jQuery</title>
      <link>https://sgshy1995.github.io/2019/11/js-to-jquery/</link>
      <pubDate>Mon, 11 Nov 2019 16:22:42 +0800</pubDate>
      
      <guid>https://sgshy1995.github.io/2019/11/js-to-jquery/</guid>
      <description>其本质 jQuery的本质是什么？一个JavaScript库。 接受一个旧的节点，返回一个新的对象（哈希），这个对象就是jQuery对象。 jQu</description>
    </item>
    
    <item>
      <title>说一些关于DOM</title>
      <link>https://sgshy1995.github.io/2019/10/js-dom/</link>
      <pubDate>Tue, 29 Oct 2019 16:22:42 +0800</pubDate>
      
      <guid>https://sgshy1995.github.io/2019/10/js-dom/</guid>
      <description>DOM API 文档对象模型（Document Object Model，简称DOM），是W3C组织推荐的处理可扩展置标语言的标准编程接口。DOM即文档对象模型，是一</description>
    </item>
    
    <item>
      <title>快速理解JS的原型与原型链</title>
      <link>https://sgshy1995.github.io/2019/10/js-type-proto/</link>
      <pubDate>Sun, 20 Oct 2019 16:22:42 +0800</pubDate>
      
      <guid>https://sgshy1995.github.io/2019/10/js-type-proto/</guid>
      <description>概述 JavaScript中有基本类型和复杂类型的区分。 当我们在声明一个基本类型时： 1 2 3 var n1= 1 console.log(n1) //1 这时我们可以用Number方法将1包装为对</description>
    </item>
    
    <item>
      <title>JS中的数据类型转换</title>
      <link>https://sgshy1995.github.io/2019/10/js-type-transor/</link>
      <pubDate>Mon, 14 Oct 2019 16:22:42 +0800</pubDate>
      
      <guid>https://sgshy1995.github.io/2019/10/js-type-transor/</guid>
      <description>关于JavaScript中的各种数据类型的简单转换。 转换为字符串 toString 可以用toString这个API将其他数据类型转换为字符串，其中也有一些特</description>
    </item>
    
    <item>
      <title>浅谈：JS中的数据类型</title>
      <link>https://sgshy1995.github.io/2019/10/js-type/</link>
      <pubDate>Tue, 08 Oct 2019 16:22:42 +0800</pubDate>
      
      <guid>https://sgshy1995.github.io/2019/10/js-type/</guid>
      <description>JS中的数据类型。什么是数据类型？ 和我们平时交流一样一样。 什么是汉字，什么是拼音，什么是标点符号，什么又是现在流行的表情包？类型，可以是语言</description>
    </item>
    
    <item>
      <title>HTML常用标签详解</title>
      <link>https://sgshy1995.github.io/2019/09/html5-target/</link>
      <pubDate>Mon, 30 Sep 2019 16:22:42 +0800</pubDate>
      
      <guid>https://sgshy1995.github.io/2019/09/html5-target/</guid>
      <description>对于很多HTML初学者来说，记忆和掌握标签是一门很难搞的功课。来详细介绍常用的HTML标签。 stlye标签 用于定义元素的CSS样式 1 2 3 &amp;lt;style&amp;gt; /</description>
    </item>
    
    <item>
      <title>CSS技巧二：布局细节</title>
      <link>https://sgshy1995.github.io/2019/09/css-method-two/</link>
      <pubDate>Fri, 20 Sep 2019 16:22:42 +0800</pubDate>
      
      <guid>https://sgshy1995.github.io/2019/09/css-method-two/</guid>
      <description>在我们写CSS代码的过程中养成记录一些小技巧的习惯。 不然我深有体会的就是，当时觉得很简单很简单很简单的东西，过段时间可能需要走弯路用几个小时</description>
    </item>
    
    <item>
      <title>CSS技巧一：IconFont使用</title>
      <link>https://sgshy1995.github.io/2019/09/css-method-one/</link>
      <pubDate>Sun, 15 Sep 2019 16:22:42 +0800</pubDate>
      
      <guid>https://sgshy1995.github.io/2019/09/css-method-one/</guid>
      <description>在我们使用CSS对页面进行编辑布局时，经常会用到一些小图标或者logo。 常见的比如我们在制作个人主页时，使用超链接图标来跳转到你的微博或其他</description>
    </item>
    
    <item>
      <title>CSS常见布局与居中</title>
      <link>https://sgshy1995.github.io/2019/09/css-local-one/</link>
      <pubDate>Tue, 03 Sep 2019 16:22:42 +0800</pubDate>
      
      <guid>https://sgshy1995.github.io/2019/09/css-local-one/</guid>
      <description>这里，就CSS左右布局，左中右布局，水平与垂直居中，进行讨论。 CSS常用于控制页面布局的定位机制： 普通流、相对定位、绝对定位和固定定位。还可</description>
    </item>
    
    <item>
      <title>HTTP的请求与响应以及使用Chrome的查看方式</title>
      <link>https://sgshy1995.github.io/2019/08/http/</link>
      <pubDate>Thu, 29 Aug 2019 16:22:42 +0800</pubDate>
      
      <guid>https://sgshy1995.github.io/2019/08/http/</guid>
      <description>HTTP 的作用就是指导浏览器和服务器如何进行沟通。 今天，我们就HTTP的请求与响应，做出简短的介绍。 HTTP 请求 这里使用 curl 命令来实现请求。 请求示例1： 1</description>
    </item>
    
    <item>
      <title>关于 URL</title>
      <link>https://sgshy1995.github.io/2019/08/url-one/</link>
      <pubDate>Sat, 24 Aug 2019 16:22:42 +0800</pubDate>
      
      <guid>https://sgshy1995.github.io/2019/08/url-one/</guid>
      <description>万维网/WWW 万维网（World Wide Web）亦作 WWW、Web，是一个透过互联网访问的，由许多互相链接的超文本组成的系统。 WWW = HTTP + URI + HTML URL UR</description>
    </item>
    
  </channel>
</rss>